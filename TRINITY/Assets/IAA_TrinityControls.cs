//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/IAA_TrinityControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @IAA_TrinityControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @IAA_TrinityControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""IAA_TrinityControls"",
    ""maps"": [
        {
            ""name"": ""PLAYER"",
            ""id"": ""459a8736-29ab-46e8-a44c-60ae18b6c7ff"",
            ""actions"": [
                {
                    ""name"": ""JumpGlide"",
                    ""type"": ""Button"",
                    ""id"": ""75cc0dcb-0286-4227-8733-3cbe869ae3dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Blink"",
                    ""type"": ""Button"",
                    ""id"": ""2e10a82b-6a04-4554-a19f-8f11107bfbf5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Forcefield"",
                    ""type"": ""Button"",
                    ""id"": ""73f1aa5d-d649-4bda-9edf-09e3f0380b3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""736f8dde-db90-453a-8987-7a5c6c4d2e2d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""65cdafd3-89ff-4df7-8e5e-f4dc453e9837"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ElementalUtility"",
                    ""type"": ""Button"",
                    ""id"": ""0c474b98-2441-4b37-bc50-92be33366e99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ElementalPrimary"",
                    ""type"": ""Button"",
                    ""id"": ""288cf52d-1c8a-4ba7-b20c-d2ec0d3e6f55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ElementalSecondary"",
                    ""type"": ""Button"",
                    ""id"": ""3219a59a-3518-43c5-b5e1-085029f812cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextElement"",
                    ""type"": ""Button"",
                    ""id"": ""874725ac-c465-46d7-8356-1d7172f13246"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousElement"",
                    ""type"": ""Button"",
                    ""id"": ""ceb6ccbd-4d0d-4e33-a11d-100bfa5ee8d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1e6811e0-9490-4d9d-99e5-3be95bb7ac01"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""JumpGlide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e40aa21-587d-458d-b455-5b56eaf3337c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""JumpGlide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00714b0f-03f1-4ef9-9f04-1b2bb8ec0a65"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Blink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74635ac9-05ea-4a41-a5f7-2e5a1a22fa0f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Blink"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4ee1b63-4b30-4885-84a3-d0dcd855e4e0"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Forcefield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05179017-2180-44ad-b9e8-91f37fe10ee0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Forcefield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dfe29d3-036a-4671-b969-ebae7fafa5fd"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ebfb8800-f529-4037-af10-e852cf767507"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""38611380-d269-4dd5-adda-decea04a92f9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e7d9e0fc-6a97-4aaf-87c4-5b4777d3efcd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""79c8618a-3c5b-4958-835a-20df8409ead7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f466d888-5e6a-4eb8-a7fe-450aed577c07"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f461c6bb-6b80-47da-8506-9041384ee562"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37b6783c-71f8-49cc-8b35-8911dba014a4"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7bf77eda-37b0-4df5-aeba-c9175867e757"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""ElementalUtility"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e80b7e3-ead3-4626-8670-437b6e0972fd"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""ElementalPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f978636-c5f7-4416-9deb-2b2e6328c8ff"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""ElementalSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbf8193d-e530-42a0-81f2-72847c446374"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""NextElement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6eff5e66-e12c-4f37-905c-ac5dcbd2ddc4"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GENERIC"",
                    ""action"": ""PreviousElement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""GENERIC"",
            ""bindingGroup"": ""GENERIC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<DualShockGamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<WebGLGamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<NimbusGamepadHid>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PLAYER
        m_PLAYER = asset.FindActionMap("PLAYER", throwIfNotFound: true);
        m_PLAYER_JumpGlide = m_PLAYER.FindAction("JumpGlide", throwIfNotFound: true);
        m_PLAYER_Blink = m_PLAYER.FindAction("Blink", throwIfNotFound: true);
        m_PLAYER_Forcefield = m_PLAYER.FindAction("Forcefield", throwIfNotFound: true);
        m_PLAYER_Move = m_PLAYER.FindAction("Move", throwIfNotFound: true);
        m_PLAYER_Camera = m_PLAYER.FindAction("Camera", throwIfNotFound: true);
        m_PLAYER_ElementalUtility = m_PLAYER.FindAction("ElementalUtility", throwIfNotFound: true);
        m_PLAYER_ElementalPrimary = m_PLAYER.FindAction("ElementalPrimary", throwIfNotFound: true);
        m_PLAYER_ElementalSecondary = m_PLAYER.FindAction("ElementalSecondary", throwIfNotFound: true);
        m_PLAYER_NextElement = m_PLAYER.FindAction("NextElement", throwIfNotFound: true);
        m_PLAYER_PreviousElement = m_PLAYER.FindAction("PreviousElement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PLAYER
    private readonly InputActionMap m_PLAYER;
    private List<IPLAYERActions> m_PLAYERActionsCallbackInterfaces = new List<IPLAYERActions>();
    private readonly InputAction m_PLAYER_JumpGlide;
    private readonly InputAction m_PLAYER_Blink;
    private readonly InputAction m_PLAYER_Forcefield;
    private readonly InputAction m_PLAYER_Move;
    private readonly InputAction m_PLAYER_Camera;
    private readonly InputAction m_PLAYER_ElementalUtility;
    private readonly InputAction m_PLAYER_ElementalPrimary;
    private readonly InputAction m_PLAYER_ElementalSecondary;
    private readonly InputAction m_PLAYER_NextElement;
    private readonly InputAction m_PLAYER_PreviousElement;
    public struct PLAYERActions
    {
        private @IAA_TrinityControls m_Wrapper;
        public PLAYERActions(@IAA_TrinityControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @JumpGlide => m_Wrapper.m_PLAYER_JumpGlide;
        public InputAction @Blink => m_Wrapper.m_PLAYER_Blink;
        public InputAction @Forcefield => m_Wrapper.m_PLAYER_Forcefield;
        public InputAction @Move => m_Wrapper.m_PLAYER_Move;
        public InputAction @Camera => m_Wrapper.m_PLAYER_Camera;
        public InputAction @ElementalUtility => m_Wrapper.m_PLAYER_ElementalUtility;
        public InputAction @ElementalPrimary => m_Wrapper.m_PLAYER_ElementalPrimary;
        public InputAction @ElementalSecondary => m_Wrapper.m_PLAYER_ElementalSecondary;
        public InputAction @NextElement => m_Wrapper.m_PLAYER_NextElement;
        public InputAction @PreviousElement => m_Wrapper.m_PLAYER_PreviousElement;
        public InputActionMap Get() { return m_Wrapper.m_PLAYER; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PLAYERActions set) { return set.Get(); }
        public void AddCallbacks(IPLAYERActions instance)
        {
            if (instance == null || m_Wrapper.m_PLAYERActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PLAYERActionsCallbackInterfaces.Add(instance);
            @JumpGlide.started += instance.OnJumpGlide;
            @JumpGlide.performed += instance.OnJumpGlide;
            @JumpGlide.canceled += instance.OnJumpGlide;
            @Blink.started += instance.OnBlink;
            @Blink.performed += instance.OnBlink;
            @Blink.canceled += instance.OnBlink;
            @Forcefield.started += instance.OnForcefield;
            @Forcefield.performed += instance.OnForcefield;
            @Forcefield.canceled += instance.OnForcefield;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @ElementalUtility.started += instance.OnElementalUtility;
            @ElementalUtility.performed += instance.OnElementalUtility;
            @ElementalUtility.canceled += instance.OnElementalUtility;
            @ElementalPrimary.started += instance.OnElementalPrimary;
            @ElementalPrimary.performed += instance.OnElementalPrimary;
            @ElementalPrimary.canceled += instance.OnElementalPrimary;
            @ElementalSecondary.started += instance.OnElementalSecondary;
            @ElementalSecondary.performed += instance.OnElementalSecondary;
            @ElementalSecondary.canceled += instance.OnElementalSecondary;
            @NextElement.started += instance.OnNextElement;
            @NextElement.performed += instance.OnNextElement;
            @NextElement.canceled += instance.OnNextElement;
            @PreviousElement.started += instance.OnPreviousElement;
            @PreviousElement.performed += instance.OnPreviousElement;
            @PreviousElement.canceled += instance.OnPreviousElement;
        }

        private void UnregisterCallbacks(IPLAYERActions instance)
        {
            @JumpGlide.started -= instance.OnJumpGlide;
            @JumpGlide.performed -= instance.OnJumpGlide;
            @JumpGlide.canceled -= instance.OnJumpGlide;
            @Blink.started -= instance.OnBlink;
            @Blink.performed -= instance.OnBlink;
            @Blink.canceled -= instance.OnBlink;
            @Forcefield.started -= instance.OnForcefield;
            @Forcefield.performed -= instance.OnForcefield;
            @Forcefield.canceled -= instance.OnForcefield;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @ElementalUtility.started -= instance.OnElementalUtility;
            @ElementalUtility.performed -= instance.OnElementalUtility;
            @ElementalUtility.canceled -= instance.OnElementalUtility;
            @ElementalPrimary.started -= instance.OnElementalPrimary;
            @ElementalPrimary.performed -= instance.OnElementalPrimary;
            @ElementalPrimary.canceled -= instance.OnElementalPrimary;
            @ElementalSecondary.started -= instance.OnElementalSecondary;
            @ElementalSecondary.performed -= instance.OnElementalSecondary;
            @ElementalSecondary.canceled -= instance.OnElementalSecondary;
            @NextElement.started -= instance.OnNextElement;
            @NextElement.performed -= instance.OnNextElement;
            @NextElement.canceled -= instance.OnNextElement;
            @PreviousElement.started -= instance.OnPreviousElement;
            @PreviousElement.performed -= instance.OnPreviousElement;
            @PreviousElement.canceled -= instance.OnPreviousElement;
        }

        public void RemoveCallbacks(IPLAYERActions instance)
        {
            if (m_Wrapper.m_PLAYERActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPLAYERActions instance)
        {
            foreach (var item in m_Wrapper.m_PLAYERActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PLAYERActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PLAYERActions @PLAYER => new PLAYERActions(this);
    private int m_GENERICSchemeIndex = -1;
    public InputControlScheme GENERICScheme
    {
        get
        {
            if (m_GENERICSchemeIndex == -1) m_GENERICSchemeIndex = asset.FindControlSchemeIndex("GENERIC");
            return asset.controlSchemes[m_GENERICSchemeIndex];
        }
    }
    public interface IPLAYERActions
    {
        void OnJumpGlide(InputAction.CallbackContext context);
        void OnBlink(InputAction.CallbackContext context);
        void OnForcefield(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnElementalUtility(InputAction.CallbackContext context);
        void OnElementalPrimary(InputAction.CallbackContext context);
        void OnElementalSecondary(InputAction.CallbackContext context);
        void OnNextElement(InputAction.CallbackContext context);
        void OnPreviousElement(InputAction.CallbackContext context);
    }
}
